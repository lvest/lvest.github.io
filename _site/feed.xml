<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-01-06T05:29:57+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Your awesome title</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">Enable Google Page Views</title><link href="http://localhost:4000/blogging/tutorial/2021/01/04/enable-google-pv.html" rel="alternate" type="text/html" title="Enable Google Page Views" /><published>2021-01-04T08:32:00+09:00</published><updated>2021-01-04T08:32:00+09:00</updated><id>http://localhost:4000/blogging/tutorial/2021/01/04/enable-google-pv</id><content type="html" xml:base="http://localhost:4000/blogging/tutorial/2021/01/04/enable-google-pv.html"><![CDATA[<blockquote class="prompt-danger">
  <p>The content of this post applies only to <a href="https://support.google.com/analytics/answer/10220206"><em>Universal Analytics property</em></a> (UA), not <a href="https://support.google.com/analytics/answer/10089681"><em>Google Analytics 4</em></a> (GA 4). In addition, since <a href="https://support.google.com/analytics/answer/11583528">UA is about to be deprecated on Jul 1, 2023</a>, the Page Views feature of <a href="https://github.com/cotes2020/jekyll-theme-chirpy/"><em>Chirpy</em></a> will also be deprecated at that time.</p>
</blockquote>

<p>This post is to enable Page Views on the <a href="https://github.com/cotes2020/jekyll-theme-chirpy/"><strong>Chirpy</strong></a> theme based blog that you just built. This requires technical knowledge and it’s recommended to keep the <code class="language-plaintext highlighter-rouge">google_analytics.pv.*</code> empty unless you have a good reason. If your website has low traffic, the page views count would discourage you to write more blogs. With that said, let’s start with the setup.</p>

<h2 id="set-up-google-analytics">Set up Google Analytics</h2>

<h3 id="create-ga-account-and-property">Create GA account and property</h3>

<p>First, you need to set up your account on Google analytics. While you create your account, you must create your first <strong>Property</strong> as well.</p>

<ol>
  <li>Head to <a href="https://analytics.google.com/">https://analytics.google.com/</a> and click on <strong>Start Measuring</strong></li>
  <li>Enter your desired <em>Account Name</em> and choose the desired checkboxes</li>
  <li>Enter your desired <em>Property Name</em>. This is the name of the tracker project that appears on your Google Analytics dashboard</li>
  <li>Enter the required information <em>About your business</em></li>
  <li>Hit <em>Create</em> and accept any license popup to set up your Google Analytics account and create your property</li>
</ol>

<h3 id="create-data-stream">Create Data Stream</h3>

<p>With your property created, you now need to set up Data Stream to track your blog traffic. After you signup, the prompt should automatically take you to create your first <strong>Data Stream</strong>. If not, follow these steps:</p>

<ol>
  <li>Go to <strong>Admin</strong> on the left column</li>
  <li>Select the desired property from the drop-down on the second column</li>
  <li>Click on <strong>Data Streams</strong></li>
  <li>Add a stream and click on <strong>Web</strong></li>
  <li>Enter your blog’s URL</li>
</ol>

<p>It should look like this:</p>

<p><img src="/posts/20210103/01-google-analytics-data-stream.png" alt="google-analytics-data-stream" width="1086" height="542" /></p>

<p>Now, click on the new data stream and grab the <strong>Measurement ID</strong>. It should look something like <code class="language-plaintext highlighter-rouge">G-V6XXXXXXXX</code>. Copy this to your <code class="language-plaintext filepath highlighter-rouge">_config.yml</code> file:</p>

<div file="_config.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">google_analytics</span><span class="pi">:</span>
  <span class="na">id</span><span class="pi">:</span> <span class="s1">'</span><span class="s">G-V6XXXXXXX'</span>   <span class="c1"># fill in your Google Analytics ID</span>
  <span class="c1"># Google Analytics pageviews report settings</span>
  <span class="na">pv</span><span class="pi">:</span>
    <span class="na">proxy_endpoint</span><span class="pi">:</span>   <span class="c1"># fill in the Google Analytics superProxy endpoint of Google App Engine</span>
    <span class="na">cache_path</span><span class="pi">:</span>       <span class="c1"># the local PV cache data, friendly to visitors from GFW region</span>
</code></pre></div></div>

<p>When you push these changes to your blog, you should start seeing the traffic on your Google Analytics. Play around with the Google Analytics dashboard to get familiar with the options available as it takes like 5 mins to pick up your changes. You should now be able to monitor your traffic in real time.</p>

<p><img src="/posts/20210103/02-google-analytics-realtime.png" alt="google-analytics-realtime" width="616" height="557" /></p>

<h2 id="setup-page-views">Setup Page Views</h2>

<p>There is a detailed <a href="https://developers.google.com/analytics/solutions/google-analytics-super-proxy">tutorial</a> available to set up Google Analytics superProxy. But, if you are interested to just quickly get your Chirpy-based blog display page views, follow along. These steps were tested on a Linux machine. If you are running Windows, you can use the Git bash terminal to run Unix-like commands.</p>

<h3 id="setup-google-app-engine">Setup Google App Engine</h3>

<ol>
  <li>
    <p>Visit <a href="https://console.cloud.google.com/appengine">https://console.cloud.google.com/appengine</a></p>
  </li>
  <li>
    <p>Click on <strong>Create Application</strong></p>
  </li>
  <li>
    <p>Click on <strong>Create Project</strong></p>
  </li>
  <li>
    <p>Enter the name and choose the data center close to you</p>
  </li>
  <li>
    <p>Select <strong>Python</strong> language and <strong>Standard</strong> environment</p>
  </li>
  <li>
    <p>Enable billing account. Yeah, you have to link your credit card. But, you won’t be billed unless you exceed your free quota. For a simple blog, the free quota is more than sufficient.</p>
  </li>
  <li>
    <p>Go to your App Engine dashboard on your browser and select <strong>API &amp; Services</strong> from the left navigation menu</p>
  </li>
  <li>
    <p>Click on <strong>Enable APIs and Services</strong> button on the top</p>
  </li>
  <li>
    <p>Enable the following APIs: <em>Google Analytics API</em></p>
  </li>
  <li>
    <p>On the left, Click on <em>OAuth Consent Screen</em> and accept <strong>Configure Consent Screen</strong>. Select <strong>External</strong> since your blog is probably hosted for the public. Click on <strong>Publish</strong> under <em>Publishing Status</em></p>
  </li>
  <li>
    <p>Click on <strong>Credentials</strong> on the left and create a new <strong>OAuth Client IDs</strong> credential. Make sure to add an entry under <code class="language-plaintext highlighter-rouge">Authorized redirect URIs</code> that matches: <code class="language-plaintext highlighter-rouge">https://&lt;project-id&gt;.&lt;region&gt;.r.appspot.com/admin/auth</code></p>
  </li>
  <li>
    <p>Note down the <strong>Your Client ID</strong> and <strong>Your Client Secret</strong>. You’ll need this in the next section.</p>
  </li>
  <li>
    <p>Download and install the cloud SDK for your platform: <a href="https://cloud.google.com/sdk/docs/quickstart">https://cloud.google.com/sdk/docs/quickstart</a></p>
  </li>
  <li>
    <p>Run the following commands:</p>

    <div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">[root@bc96abf71ef8 /]#</span><span class="w"> </span>gcloud init
<span class="go">
~snip~

Go to the following link in your browser:

    https://accounts.google.com/o/oauth2/auth?response_type=code&amp;client_id=XYZ.apps.googleusercontent.com&amp;redirect_uri=ABCDEFG

</span><span class="gp">Enter verification code: &lt;VERIFICATION CODE THAT YOU GET AFTER YOU VISIT AND AUTHENTICATE FROM THE ABOVE LINK&gt;</span><span class="w">
</span><span class="go">
You are logged in as: [blah_blah@gmail.com].

Pick cloud project to use:
[1] chirpy-test-300716
[2] Create a new project
Please enter numeric choice or text value (must exactly match list
item): 1


</span><span class="gp">[root@bc96abf71ef8 /]#</span><span class="w"> </span>gcloud info
<span class="gp">#</span><span class="w"> </span>Your selected project info should be displayed here
</code></pre></div>    </div>
  </li>
</ol>

<h3 id="setup-google-analytics-superproxy">Setup Google Analytics superProxy</h3>

<ol>
  <li>
    <p>Clone the <strong>Google Analytics superProxy</strong> project on Github: <a href="https://github.com/googleanalytics/google-analytics-super-proxy">https://github.com/googleanalytics/google-analytics-super-proxy</a> to your local.</p>
  </li>
  <li>
    <p>Remove the first 2 lines in the <a href="https://github.com/googleanalytics/google-analytics-super-proxy/blob/master/src/app.yaml#L1-L2"><code class="language-plaintext filepath highlighter-rouge">src/app.yaml</code></a> file:</p>

    <div class="language-diff highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gd">- application: your-project-id
- version: 1
</span></code></pre></div>    </div>
  </li>
  <li>
    <p>In <code class="language-plaintext filepath highlighter-rouge">src/config.py</code>, add the <code class="language-plaintext highlighter-rouge">OAUTH_CLIENT_ID</code> and <code class="language-plaintext highlighter-rouge">OAUTH_CLIENT_SECRET</code> that you gathered from your App Engine Dashboard.</p>
  </li>
  <li>
    <p>Enter any random key for <code class="language-plaintext highlighter-rouge">XSRF_KEY</code>, your <code class="language-plaintext filepath highlighter-rouge">config.py</code> should look similar to this</p>

    <div file="src/config.py" class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#!/usr/bin/python2.7
</span>
<span class="n">__author__</span> <span class="o">=</span> <span class="s">'pete.frisella@gmail.com (Pete Frisella)'</span>

<span class="c1"># OAuth 2.0 Client Settings
</span><span class="n">AUTH_CONFIG</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s">'OAUTH_CLIENT_ID'</span><span class="p">:</span> <span class="s">'YOUR_CLIENT_ID'</span><span class="p">,</span>
  <span class="s">'OAUTH_CLIENT_SECRET'</span><span class="p">:</span> <span class="s">'YOUR_CLIENT_SECRET'</span><span class="p">,</span>
  <span class="s">'OAUTH_REDIRECT_URI'</span><span class="p">:</span> <span class="s">'%s%s'</span> <span class="o">%</span> <span class="p">(</span>
    <span class="s">'https://chirpy-test-XXXXXX.ue.r.appspot.com'</span><span class="p">,</span>
    <span class="s">'/admin/auth'</span>
  <span class="p">)</span>
<span class="p">}</span>

<span class="c1"># XSRF Settings
</span><span class="n">XSRF_KEY</span> <span class="o">=</span> <span class="s">'OnceUponATimeThereLivedALegend'</span>
</code></pre></div>    </div>

    <blockquote class="prompt-info">
      <p>You can configure a custom domain instead of <code class="language-plaintext highlighter-rouge">https://PROJECT_ID.REGION_ID.r.appspot.com</code>.
But, for the sake of keeping it simple, we will be using the Google provided default URL.</p>
    </blockquote>
  </li>
  <li>
    <p>From inside the <code class="language-plaintext filepath highlighter-rouge">src/</code> directory, deploy the app</p>

    <div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">[root@bc96abf71ef8 src]#</span><span class="w"> </span>gcloud app deploy
<span class="go">Services to deploy:

descriptor:      [/tmp/google-analytics-super-proxy/src/app.yaml]
source:          [/tmp/google-analytics-super-proxy/src]
target project:  [chirpy-test-XXXX]
target service:  [default]
target version:  [VESRION_NUM]
target url:      [https://chirpy-test-XXXX.ue.r.appspot.com]


Do you want to continue (Y/n)? Y

Beginning deployment of service [default]...
╔════════════════════════════════════════════════════════════╗
╠═ Uploading 1 file to Google Cloud Storage                 ═╣
╚════════════════════════════════════════════════════════════╝
File upload done.
Updating service [default]...done.
Setting traffic split for service [default]...done.
Deployed service [default] to [https://chirpy-test-XXXX.ue.r.appspot.com]

You can stream logs from the command line by running:
</span><span class="gp">$</span><span class="w"> </span>gcloud app logs <span class="nb">tail</span> <span class="nt">-s</span> default
<span class="go">
To view your application in the web browser run:
</span><span class="gp">$</span><span class="w"> </span>gcloud app browse
</code></pre></div>    </div>
  </li>
  <li>
    <p>Visit the deployed service. Add a <code class="language-plaintext highlighter-rouge">/admin</code> to the end of the URL.</p>
  </li>
  <li>
    <p>Click on <strong>Authorize Users</strong> and make sure to add yourself as a managed user.</p>
  </li>
  <li>
    <p>If you get any errors, please Google it. The errors are self-explanatory and should be easy to fix.</p>
  </li>
</ol>

<p>If everything went good, you’ll get this screen:</p>

<p><img src="/posts/20210103/03-superProxy-deployed.png" alt="superProxy-deployed" width="1366" height="354" /></p>

<h3 id="create-google-analytics-query">Create Google Analytics Query</h3>

<p>Head to <code class="language-plaintext highlighter-rouge">https://PROJECT_ID.REGION_ID.r.appspot.com/admin</code> and create a query after verifying the account. <strong>GA Core Reporting API</strong> query request can be created in <a href="https://ga-dev-tools.appspot.com/query-explorer/">Query Explorer</a>.</p>

<p>The query parameters are as follows:</p>

<ul>
  <li><strong>start-date</strong>: fill in the first day of blog posting</li>
  <li><strong>end-date</strong>: fill in <code class="language-plaintext highlighter-rouge">today</code> (this is a parameter supported by GA Report, which means that it will always end according to the current query date)</li>
  <li><strong>metrics</strong>: select <code class="language-plaintext highlighter-rouge">ga:pageviews</code></li>
  <li><strong>dimensions</strong>: select <code class="language-plaintext highlighter-rouge">ga:pagePath</code></li>
</ul>

<p>In order to reduce the returned results and reduce the network bandwidth, we add custom filtering rules <sup id="fnref:ga-filters" role="doc-noteref"><a href="#fn:ga-filters" class="footnote" rel="footnote">1</a></sup>:</p>

<ul>
  <li>
    <p><strong>filters</strong>: fill in <code class="language-plaintext highlighter-rouge">ga:pagePath=~^/posts/.*/$;ga:pagePath!@=</code>.</p>

    <p>Among them, <code class="language-plaintext highlighter-rouge">;</code> means using <em>logical AND</em> to concatenate two rules.</p>

    <p>If the <code class="language-plaintext highlighter-rouge">site.baseurl</code> is specified, change the first filtering rule to <code class="language-plaintext highlighter-rouge">ga:pagePath=~^/BASE_URL/posts/.*/$</code>, where <code class="language-plaintext highlighter-rouge">BASE_URL</code> is the value of <code class="language-plaintext highlighter-rouge">site.baseurl</code>.</p>
  </li>
</ul>

<p>After <kbd>Run Query</kbd>, copy the generated contents of <strong>API Query URI</strong> at the bottom of the page and fill in the <strong>Encoded URI for the query</strong> of SuperProxy on GAE.</p>

<p>After the query is saved on GAE, a <strong>Public Endpoint</strong> (public access address) will be generated, and we will get the query result in JSON format when accessing it. Finally, click <kbd>Enable Endpoint</kbd> in <strong>Public Request Endpoint</strong> to make the query effective, and click <kbd>Start Scheduling</kbd> in <strong>Scheduling</strong> to start the scheduled task.</p>

<p><img src="/posts/20210103/04-superproxy-query.png" alt="superproxy-query" width="1100" height="126" /></p>

<h2 id="configure-chirpy-to-display-page-view">Configure Chirpy to Display Page View</h2>

<p>Once all the hard part is done, it is very easy to enable the Page View on Chirpy theme. Your superProxy dashboard should look something like below and you can grab the required values.</p>

<p><img src="/posts/20210103/05-superproxy-dashboard.png" alt="superproxy-dashboard" width="1210" height="694" /></p>

<p>Update the <code class="language-plaintext filepath highlighter-rouge">_config.yml</code> file of <a href="https://github.com/cotes2020/jekyll-theme-chirpy/"><strong>Chirpy</strong></a> project with the values from your dashboard, to look similar to the following:</p>

<div file="_config.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">google_analytics</span><span class="pi">:</span>
  <span class="na">id</span><span class="pi">:</span> <span class="s1">'</span><span class="s">G-V6XXXXXXX'</span>   <span class="c1"># fill in your Google Analytics ID</span>
  <span class="na">pv</span><span class="pi">:</span>
    <span class="na">proxy_endpoint</span><span class="pi">:</span> <span class="s1">'</span><span class="s">https://PROJECT_ID.REGION_ID.r.appspot.com/query?id=&lt;ID</span><span class="nv"> </span><span class="s">FROM</span><span class="nv"> </span><span class="s">SUPER</span><span class="nv"> </span><span class="s">PROXY&gt;'</span>
    <span class="na">cache_path</span><span class="pi">:</span>       <span class="c1"># the local PV cache data, friendly to visitors from GFW region</span>
</code></pre></div></div>

<p>Now, you should see the Page View enabled on your blog.</p>

<h2 id="reference">Reference</h2>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:ga-filters" role="doc-endnote">
      <p><a href="https://developers.google.com/analytics/devguides/reporting/core/v3/reference#filters">Google Analytics Core Reporting API: Filters</a> <a href="#fnref:ga-filters" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>Dinesh Prasanth Moluguwan Krishnamoorthy</name></author><category term="Blogging" /><category term="Tutorial" /><category term="google analytics" /><category term="pageviews" /><summary type="html"><![CDATA[The content of this post applies only to Universal Analytics property (UA), not Google Analytics 4 (GA 4). In addition, since UA is about to be deprecated on Jul 1, 2023, the Page Views feature of Chirpy will also be deprecated at that time.]]></summary></entry><entry><title type="html">Customize the Favicon</title><link href="http://localhost:4000/blogging/tutorial/2019/08/11/customize-the-favicon.html" rel="alternate" type="text/html" title="Customize the Favicon" /><published>2019-08-11T01:34:00+09:00</published><updated>2019-08-11T01:34:00+09:00</updated><id>http://localhost:4000/blogging/tutorial/2019/08/11/customize-the-favicon</id><content type="html" xml:base="http://localhost:4000/blogging/tutorial/2019/08/11/customize-the-favicon.html"><![CDATA[<p>The <a href="https://www.favicon-generator.org/about/">favicons</a> of <a href="https://github.com/cotes2020/jekyll-theme-chirpy/"><strong>Chirpy</strong></a> are placed in the directory <code class="language-plaintext filepath highlighter-rouge">assets/img/favicons/</code>. You may want to replace them with your own. The following sections will guide you to create and replace the default favicons.</p>

<h2 id="generate-the-favicon">Generate the favicon</h2>

<p>Prepare a square image (PNG, JPG, or SVG) with a size of 512x512 or more, and then go to the online tool <a href="https://realfavicongenerator.net/"><strong>Real Favicon Generator</strong></a> and click the button <kbd>Select your Favicon image</kbd> to upload your image file.</p>

<p>In the next step, the webpage will show all usage scenarios. You can keep the default options, scroll to the bottom of the page, and click the button <kbd>Generate your Favicons and HTML code</kbd> to generate the favicon.</p>

<h2 id="download--replace">Download &amp; Replace</h2>

<p>Download the generated package, unzip and delete the following two from the extracted files:</p>

<ul>
  <li><code class="language-plaintext filepath highlighter-rouge">browserconfig.xml</code></li>
  <li><code class="language-plaintext filepath highlighter-rouge">site.webmanifest</code></li>
</ul>

<p>And then copy the remaining image files (<code class="language-plaintext filepath highlighter-rouge">.PNG</code> and <code class="language-plaintext filepath highlighter-rouge">.ICO</code>) to cover the original files in the directory <code class="language-plaintext filepath highlighter-rouge">assets/img/favicons/</code> of your Jekyll site. If your Jekyll site doesn’t have this directory yet, just create one.</p>

<p>The following table will help you understand the changes to the favicon files:</p>

<table>
  <thead>
    <tr>
      <th>File(s)</th>
      <th style="text-align: center">From Online Tool</th>
      <th style="text-align: center">From Chirpy</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">*.PNG</code></td>
      <td style="text-align: center">✓</td>
      <td style="text-align: center">✗</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">*.ICO</code></td>
      <td style="text-align: center">✓</td>
      <td style="text-align: center">✗</td>
    </tr>
  </tbody>
</table>

<blockquote class="prompt-info">
  <p>✓ means keep, ✗ means delete.</p>
</blockquote>

<p>The next time you build the site, the favicon will be replaced with a customized edition.</p>]]></content><author><name>Cotes Chung</name></author><category term="Blogging" /><category term="Tutorial" /><category term="favicon" /><summary type="html"><![CDATA[The favicons of Chirpy are placed in the directory assets/img/favicons/. You may want to replace them with your own. The following sections will guide you to create and replace the default favicons.]]></summary></entry><entry><title type="html">Getting Started</title><link href="http://localhost:4000/blogging/tutorial/2019/08/09/getting-started.html" rel="alternate" type="text/html" title="Getting Started" /><published>2019-08-09T21:55:00+09:00</published><updated>2019-08-09T21:55:00+09:00</updated><id>http://localhost:4000/blogging/tutorial/2019/08/09/getting-started</id><content type="html" xml:base="http://localhost:4000/blogging/tutorial/2019/08/09/getting-started.html"><![CDATA[<h2 id="prerequisites">Prerequisites</h2>

<p>Follow the instructions in the <a href="https://jekyllrb.com/docs/installation/">Jekyll Docs</a> to complete the installation of <code class="language-plaintext highlighter-rouge">Ruby</code>, <code class="language-plaintext highlighter-rouge">RubyGems</code>, <code class="language-plaintext highlighter-rouge">Jekyll</code>, and <code class="language-plaintext highlighter-rouge">Bundler</code>. In addition, <a href="https://git-scm.com/">Git</a> is also required to be installed.</p>

<h2 id="installation">Installation</h2>

<h3 id="creating-a-new-site">Creating a New Site</h3>

<p>There are two ways to create a new repository for this theme:</p>

<ul>
  <li><a href="#option-1-using-the-chirpy-starter"><strong>Using the Chirpy Starter</strong></a> - Easy to upgrade, isolates irrelevant project files so you can focus on writing.</li>
  <li><a href="#option-2-forking-on-github"><strong>Forking on GitHub</strong></a> - Convenient for custom development, but difficult to upgrade. Unless you are familiar with Jekyll and are determined to tweak or contribute to this project, this approach is not recommended.</li>
</ul>

<h4 id="option-1-using-the-chirpy-starter">Option 1. Using the Chirpy Starter</h4>

<p>Create a new repository from the <a href="https://github.com/cotes2020/chirpy-starter/generate"><strong>Chirpy Starter</strong></a> and name it <code class="language-plaintext highlighter-rouge">&lt;GH_USERNAME&gt;.github.io</code>, where <code class="language-plaintext highlighter-rouge">GH_USERNAME</code> represents your GitHub username.</p>

<h4 id="option-2-forking-on-github">Option 2. Forking on GitHub</h4>

<p><a href="https://github.com/cotes2020/jekyll-theme-chirpy/fork">Fork <strong>Chirpy</strong></a> on GitHub and rename it to <code class="language-plaintext highlighter-rouge">&lt;GH_USERNAME&gt;.github.io</code>. Please note that the default branch code is in development.  If you want the site to be stable, please switch to the <a href="https://github.com/cotes2020/jekyll-theme-chirpy/tags">latest tag</a> and start writing.</p>

<p>And then execute:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>bash tools/init.sh
</code></pre></div></div>

<blockquote class="prompt-info">
  <p>If you don’t want to deploy your site on GitHub Pages, append option <code class="language-plaintext highlighter-rouge">--no-gh</code> at the end of the above command.</p>
</blockquote>

<p>The above command will:</p>

<ol>
  <li>
    <p>Remove the files in <code class="language-plaintext filepath highlighter-rouge">_posts</code> from your repository.</p>
  </li>
  <li>
    <p>If the option <code class="language-plaintext highlighter-rouge">--no-gh</code> is provided, the directory <code class="language-plaintext filepath highlighter-rouge">.github</code> will be deleted. Otherwise, set up the GitHub Action workflow by removing the extension <code class="language-plaintext filepath highlighter-rouge">.hook</code> of <code class="language-plaintext filepath highlighter-rouge">.github/workflows/pages-deploy.yml.hook</code>, and then remove the other files and directories in the folder <code class="language-plaintext filepath highlighter-rouge">.github</code>.</p>
  </li>
  <li>
    <p>Remove item <code class="language-plaintext highlighter-rouge">Gemfile.lock</code> from <code class="language-plaintext filepath highlighter-rouge">.gitignore</code>.</p>
  </li>
  <li>
    <p>Create a new commit to save the changes automatically.</p>
  </li>
</ol>

<h3 id="installing-dependencies">Installing Dependencies</h3>

<p>Before running for the first time, go to the root directory of your site, and install dependencies as follows:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>bundle
</code></pre></div></div>

<h2 id="usage">Usage</h2>

<h3 id="configuration">Configuration</h3>

<p>Update the variables of <code class="language-plaintext filepath highlighter-rouge">_config.yml</code> as needed. Some of them are typical options:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">url</code></li>
  <li><code class="language-plaintext highlighter-rouge">avatar</code></li>
  <li><code class="language-plaintext highlighter-rouge">timezone</code></li>
  <li><code class="language-plaintext highlighter-rouge">lang</code></li>
</ul>

<h3 id="customizing-stylesheet">Customizing Stylesheet</h3>

<p>If you need to customize the stylesheet, copy the theme’s <code class="language-plaintext filepath highlighter-rouge">assets/css/style.scss</code> to the same path on your Jekyll site, and then add the custom style at the end of the style file.</p>

<p>Starting from <a href="https://github.com/cotes2020/jekyll-theme-chirpy/releases/tag/v4.1.0"><code class="language-plaintext highlighter-rouge">v4.1.0</code></a>, if you want to overwrite the SASS variables defined in <code class="language-plaintext filepath highlighter-rouge">_sass/addon/variables.scss</code>, create a new file <code class="language-plaintext filepath highlighter-rouge">_sass/variables-hook.scss</code> and assign new values to the target variable in it.</p>

<h3 id="customing-static-assets">Customing Static Assets</h3>

<p>Static assets configuration was introduced in version <code class="language-plaintext highlighter-rouge">5.1.0</code>. The CDN of the static assets is defined by file <code class="language-plaintext filepath highlighter-rouge">_data/assets/cross_origin.yml</code>, and you can replace some of them according to the network conditions in the region where your website is published.</p>

<p>Also, if you’d like to self-host the static assets, please refer to the <a href="https://github.com/cotes2020/chirpy-static-assets#readme"><em>chirpy-static-assets</em></a>.</p>

<h3 id="running-local-server">Running Local Server</h3>

<p>You may want to preview the site contents before publishing, so just run it by:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>bundle <span class="nb">exec </span>jekyll s
</code></pre></div></div>

<p>Or run the site on Docker with the following command:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>docker run <span class="nt">-it</span> <span class="nt">--rm</span> <span class="se">\</span>
<span class="gp">    --volume="$</span>PWD:/srv/jekyll<span class="s2">" </span><span class="se">\</span><span class="s2">
</span><span class="go">    -p 4000:4000 jekyll/jekyll \
    jekyll serve
</span></code></pre></div></div>

<p>After a while, the local service will be published at <em><a href="http://127.0.0.1:4000">http://127.0.0.1:4000</a></em>.</p>

<h2 id="deployment">Deployment</h2>

<p>Before the deployment begins, check out the file <code class="language-plaintext filepath highlighter-rouge">_config.yml</code> and make sure the <code class="language-plaintext highlighter-rouge">url</code> is configured correctly. Furthermore, if you prefer the <a href="https://help.github.com/en/github/working-with-github-pages/about-github-pages#types-of-github-pages-sites"><strong>project site</strong></a> and don’t use a custom domain, or you want to visit your website with a base URL on a web server other than <strong>GitHub Pages</strong>, remember to change the <code class="language-plaintext highlighter-rouge">baseurl</code> to your project name that starts with a slash, e.g, <code class="language-plaintext highlighter-rouge">/project-name</code>.</p>

<p>Now you can choose ONE of the following methods to deploy your Jekyll site.</p>

<h3 id="deploy-by-using-github-actions">Deploy by Using GitHub Actions</h3>

<p>Ensure your Jekyll site has the file <code class="language-plaintext filepath highlighter-rouge">.github/workflows/pages-deploy.yml</code>. Otherwise, create a new one and fill in the contents of the <a href="https://github.com/cotes2020/jekyll-theme-chirpy/blob/master/.github/workflows/pages-deploy.yml.hook">sample file</a>, and the value of the <code class="language-plaintext highlighter-rouge">on.push.branches</code> should be the same as your repo’s default branch name. And then rename your repository to <code class="language-plaintext highlighter-rouge">&lt;GH_USERNAME&gt;.github.io</code> on GitHub.</p>

<p>Furthermore, if you have committed <code class="language-plaintext filepath highlighter-rouge">Gemfile.lock</code> to the repository and your local machine is not Linux, go the the root directory of your site and update the platform list:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>bundle lock <span class="nt">--add-platform</span> x86_64-linux
</code></pre></div></div>

<p>Now publish your Jekyll site:</p>

<ol>
  <li>
    <p>Browse to your repository on GitHub. Select the tab <em>Settings</em>, then click <em>Pages</em> in the left navigation bar. Then, in the <strong>Source</strong> section (under <em>Build and deployment</em>), select <a href="https://docs.github.com/en/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site#publishing-with-a-custom-github-actions-workflow"><strong>GitHub Actions</strong></a> from the dropdown menu.</p>
  </li>
  <li>
    <p>Push any commit to remote to trigger the GitHub Actions workflow. In the <em>Actions</em> tab of your repository, you should see the workflow <em>Build and Deploy</em> running. Once the build is complete and successful, the site should be deployed automatically.</p>
  </li>
  <li>
    <p>Visit your website at the address indicated by GitHub.</p>
  </li>
</ol>

<h3 id="manually-build-and-deploy">Manually Build and Deploy</h3>

<p>On self-hosted servers, you cannot enjoy the convenience of <strong>GitHub Actions</strong>. Therefore, you should build the site on your local machine and then upload the site files to the server.</p>

<p>Go to the root of the source project, and build your site as follows:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span><span class="nv">JEKYLL_ENV</span><span class="o">=</span>production bundle <span class="nb">exec </span>jekyll b
</code></pre></div></div>

<p>Or build the site on Docker:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>docker run <span class="nt">-it</span> <span class="nt">--rm</span> <span class="se">\</span>
<span class="go">    --env JEKYLL_ENV=production \
</span><span class="gp">    --volume="$</span>PWD:/srv/jekyll<span class="s2">" </span><span class="se">\</span><span class="s2">
</span><span class="go">    jekyll/jekyll \
    jekyll build
</span></code></pre></div></div>

<p>Unless you specified the output path, the generated site files will be placed in folder <code class="language-plaintext filepath highlighter-rouge">_site</code> of the project’s root directory. Now you should upload those files to the target server.</p>

<h2 id="upgrading">Upgrading</h2>

<p>It depends on how you use the theme:</p>

<ul>
  <li>
    <p>If you are using the theme gem (there will be <code class="language-plaintext highlighter-rouge">gem "jekyll-theme-chirpy"</code> in the <code class="language-plaintext filepath highlighter-rouge">Gemfile</code>), editing the <code class="language-plaintext filepath highlighter-rouge">Gemfile</code> and update the version number of the theme gem, for example:</p>

    <div class="language-diff nolineno highlighter-rouge" file="Gemfile"><div class="highlight"><pre class="highlight"><code><span class="gd">- gem "jekyll-theme-chirpy", "~&gt; 3.2", "&gt;= 3.2.1"
</span><span class="gi">+ gem "jekyll-theme-chirpy", "~&gt; 3.3", "&gt;= 3.3.0"
</span></code></pre></div>    </div>

    <p>And then execute the following command:</p>

    <div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>bundle update jekyll-theme-chirpy
</code></pre></div>    </div>

    <p>As the version upgrades, the critical files (for details, see the <a href="https://github.com/cotes2020/chirpy-starter">Startup Template</a>) and configuration options will change. Please refer to the <a href="https://github.com/cotes2020/jekyll-theme-chirpy/wiki/Upgrade-Guide">Upgrade Guide</a> to keep your repo’s files in sync with the latest version of the theme.</p>
  </li>
  <li>
    <p>If you forked from the source project (there will be <code class="language-plaintext highlighter-rouge">gemspec</code> in the <code class="language-plaintext filepath highlighter-rouge">Gemfile</code> of your site), then merge the <a href="https://github.com/cotes2020/jekyll-theme-chirpy/tags">latest upstream tags</a> into your Jekyll site to complete the upgrade.
The merge is likely to conflict with your local modifications. Please be patient and careful to resolve these conflicts.</p>
  </li>
</ul>]]></content><author><name>Cotes Chung</name></author><category term="Blogging" /><category term="Tutorial" /><category term="getting started" /><summary type="html"><![CDATA[Prerequisites]]></summary></entry><entry><title type="html">Writing a New Post</title><link href="http://localhost:4000/blogging/tutorial/2019/08/08/write-a-new-post.html" rel="alternate" type="text/html" title="Writing a New Post" /><published>2019-08-08T15:10:00+09:00</published><updated>2019-08-08T15:10:00+09:00</updated><id>http://localhost:4000/blogging/tutorial/2019/08/08/write-a-new-post</id><content type="html" xml:base="http://localhost:4000/blogging/tutorial/2019/08/08/write-a-new-post.html"><![CDATA[<p>This tutorial will guide you how to write a post in the <em>Chirpy</em> template, and it’s worth reading even if you’ve used Jekyll before, as many features require specific variables to be set.</p>

<h2 id="naming-and-path">Naming and Path</h2>

<p>Create a new file named <code class="language-plaintext filepath highlighter-rouge">YYYY-MM-DD-TITLE.EXTENSION</code> and put it in the <code class="language-plaintext filepath highlighter-rouge">_posts</code> of the root directory. Please note that the <code class="language-plaintext filepath highlighter-rouge">EXTENSION</code> must be one of <code class="language-plaintext filepath highlighter-rouge">md</code> and <code class="language-plaintext filepath highlighter-rouge">markdown</code>. If you want to save time of creating files, please consider using the plugin <a href="https://github.com/jekyll/jekyll-compose"><code class="language-plaintext highlighter-rouge">Jekyll-Compose</code></a> to accomplish this.</p>

<h2 id="front-matter">Front Matter</h2>

<p>Basically, you need to fill the <a href="https://jekyllrb.com/docs/front-matter/">Front Matter</a> as below at the top of the post:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">title</span><span class="pi">:</span> <span class="s">TITLE</span>
<span class="na">date</span><span class="pi">:</span> <span class="s">YYYY-MM-DD HH:MM:SS +/-TTTT</span>
<span class="na">categories</span><span class="pi">:</span> <span class="pi">[</span><span class="nv">TOP_CATEGORIE</span><span class="pi">,</span> <span class="nv">SUB_CATEGORIE</span><span class="pi">]</span>
<span class="na">tags</span><span class="pi">:</span> <span class="pi">[</span><span class="nv">TAG</span><span class="pi">]</span>     <span class="c1"># TAG names should always be lowercase</span>
<span class="nn">---</span>
</code></pre></div></div>

<blockquote class="prompt-tip">
  <p>The posts’ <em>layout</em> has been set to <code class="language-plaintext highlighter-rouge">post</code> by default, so there is no need to add the variable <em>layout</em> in the Front Matter block.</p>
</blockquote>

<h3 id="timezone-of-date">Timezone of Date</h3>

<p>In order to accurately record the release date of a post, you should not only set up the <code class="language-plaintext highlighter-rouge">timezone</code> of <code class="language-plaintext filepath highlighter-rouge">_config.yml</code> but also provide the post’s timezone in variable <code class="language-plaintext highlighter-rouge">date</code> of its Front Matter block. Format: <code class="language-plaintext highlighter-rouge">+/-TTTT</code>, e.g. <code class="language-plaintext highlighter-rouge">+0800</code>.</p>

<h3 id="categories-and-tags">Categories and Tags</h3>

<p>The <code class="language-plaintext highlighter-rouge">categories</code> of each post are designed to contain up to two elements, and the number of elements in <code class="language-plaintext highlighter-rouge">tags</code> can be zero to infinity. For instance:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">categories</span><span class="pi">:</span> <span class="pi">[</span><span class="nv">Animal</span><span class="pi">,</span> <span class="nv">Insect</span><span class="pi">]</span>
<span class="na">tags</span><span class="pi">:</span> <span class="pi">[</span><span class="nv">bee</span><span class="pi">]</span>
<span class="nn">---</span>
</code></pre></div></div>

<h3 id="author-information">Author Information</h3>

<p>The author information of the post usually does not need to be filled in the <em>Front Matter</em> , they will be obtained from variables <code class="language-plaintext highlighter-rouge">social.name</code> and the first entry of <code class="language-plaintext highlighter-rouge">social.links</code> of the configuration file by default. But you can also override it as follows:</p>

<p>Adding author information in <code class="language-plaintext highlighter-rouge">_data/authors.yml</code> (If your website doesn’t have this file, don’t hesitate to create one).</p>

<div file="_data/authors.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">&lt;author_id&gt;</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">&lt;full name&gt;</span>
  <span class="na">twitter</span><span class="pi">:</span> <span class="s">&lt;twitter_of_author&gt;</span>
  <span class="na">url</span><span class="pi">:</span> <span class="s">&lt;homepage_of_author&gt;</span>
</code></pre></div></div>

<p>And then use <code class="language-plaintext highlighter-rouge">author</code> to specify a single entry or <code class="language-plaintext highlighter-rouge">authors</code> to specify multiple entries:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">author</span><span class="pi">:</span> <span class="s">&lt;author_id&gt;</span>                     <span class="c1"># for single entry</span>
<span class="c1"># or</span>
<span class="na">authors</span><span class="pi">:</span> <span class="pi">[</span><span class="nv">&lt;author1_id&gt;</span><span class="pi">,</span> <span class="nv">&lt;author2_id&gt;</span><span class="pi">]</span>   <span class="c1"># for multiple entries</span>
<span class="nn">---</span>
</code></pre></div></div>

<p>Having said that, the key <code class="language-plaintext highlighter-rouge">author</code> can also identify multiple entries.</p>

<blockquote class="prompt-info">
  <p>The benefit of reading the author information from the file <code class="language-plaintext filepath highlighter-rouge">_data/authors.yml</code> is that the page will have the meta tag <code class="language-plaintext highlighter-rouge">twitter:creator</code>, which enriches the <a href="https://developer.twitter.com/en/docs/twitter-for-websites/cards/guides/getting-started#card-and-content-attribution">Twitter Cards</a> and is good for SEO.</p>
</blockquote>

<h2 id="table-of-contents">Table of Contents</h2>

<p>By default, the <strong>T</strong>able <strong>o</strong>f <strong>C</strong>ontents (TOC) is displayed on the right panel of the post. If you want to turn it off globally, go to <code class="language-plaintext filepath highlighter-rouge">_config.yml</code> and set the value of variable <code class="language-plaintext highlighter-rouge">toc</code> to <code class="language-plaintext highlighter-rouge">false</code>. If you want to turn off TOC for a specific post, add the following to the post’s <a href="https://jekyllrb.com/docs/front-matter/">Front Matter</a>:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">toc</span><span class="pi">:</span> <span class="no">false</span>
<span class="nn">---</span>
</code></pre></div></div>

<h2 id="comments">Comments</h2>

<p>The global switch of comments is defined by variable <code class="language-plaintext highlighter-rouge">comments.active</code> in the file <code class="language-plaintext filepath highlighter-rouge">_config.yml</code>. After selecting a comment system for this variable, comments will be turned on for all posts.</p>

<p>If you want to close the comment for a specific post, add the following to the <strong>Front Matter</strong> of the post:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">comments</span><span class="pi">:</span> <span class="no">false</span>
<span class="nn">---</span>
</code></pre></div></div>

<h2 id="mathematics">Mathematics</h2>

<p>For website performance reasons, the mathematical feature won’t be loaded by default. But it can be enabled by:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">math</span><span class="pi">:</span> <span class="no">true</span>
<span class="nn">---</span>
</code></pre></div></div>

<h2 id="mermaid">Mermaid</h2>

<p><a href="https://github.com/mermaid-js/mermaid"><strong>Mermaid</strong></a> is a great diagrams generation tool. To enable it on your post, add the following to the YAML block:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">mermaid</span><span class="pi">:</span> <span class="no">true</span>
<span class="nn">---</span>
</code></pre></div></div>

<p>Then you can use it like other markdown languages: surround the graph code with <code class="language-plaintext highlighter-rouge">```mermaid</code> and <code class="language-plaintext highlighter-rouge">```</code>.</p>

<h2 id="images">Images</h2>

<h3 id="caption">Caption</h3>

<p>Add italics to the next line of an image，then it will become the caption and appear at the bottom of the image:</p>

<div class="language-markdown nolineno highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">![</span><span class="nv">img-description</span><span class="p">](</span><span class="sx">/path/to/image</span><span class="p">)</span>
<span class="ge">_Image Caption_</span>
</code></pre></div></div>

<h3 id="size">Size</h3>

<p>In order to prevent the page content layout from shifting when the image is loaded, we should set the width and height for each image:</p>

<div class="language-markdown nolineno highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">![</span><span class="nv">Desktop View</span><span class="p">](</span><span class="sx">/assets/img/sample/mockup.png</span><span class="p">)</span>{: width="700" height="400" }
</code></pre></div></div>

<p>Starting from <em>Chirpy v5.0.0</em>, <code class="language-plaintext highlighter-rouge">height</code> and <code class="language-plaintext highlighter-rouge">width</code> support abbreviations (<code class="language-plaintext highlighter-rouge">height</code> → <code class="language-plaintext highlighter-rouge">h</code>, <code class="language-plaintext highlighter-rouge">width</code> → <code class="language-plaintext highlighter-rouge">w</code>). The following example has the same effect as the above:</p>

<div class="language-markdown nolineno highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">![</span><span class="nv">Desktop View</span><span class="p">](</span><span class="sx">/assets/img/sample/mockup.png</span><span class="p">)</span>{: w="700" h="400" }
</code></pre></div></div>

<h3 id="position">Position</h3>

<p>By default, the image is centered, but you can specify the position by using one of the classes <code class="language-plaintext highlighter-rouge">normal</code>, <code class="language-plaintext highlighter-rouge">left</code>, and <code class="language-plaintext highlighter-rouge">right</code>.</p>

<blockquote class="prompt-warning">
  <p>Once the position is specified, the image caption should not be added.</p>
</blockquote>

<ul>
  <li>
    <p><strong>Normal position</strong></p>

    <p>Image will be left aligned in below sample:</p>

    <div class="language-markdown nolineno highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">![</span><span class="nv">Desktop View</span><span class="p">](</span><span class="sx">/assets/img/sample/mockup.png</span><span class="p">)</span>{: .normal }
</code></pre></div>    </div>
  </li>
  <li>
    <p><strong>Float to the left</strong></p>

    <div class="language-markdown nolineno highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">![</span><span class="nv">Desktop View</span><span class="p">](</span><span class="sx">/assets/img/sample/mockup.png</span><span class="p">)</span>{: .left }
</code></pre></div>    </div>
  </li>
  <li>
    <p><strong>Float to the right</strong></p>

    <div class="language-markdown nolineno highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">![</span><span class="nv">Desktop View</span><span class="p">](</span><span class="sx">/assets/img/sample/mockup.png</span><span class="p">)</span>{: .right }
</code></pre></div>    </div>
  </li>
</ul>

<h3 id="darklight-mode">Dark/Light mode</h3>

<p>You can make images follow theme preferences in dark/light mode. This requires you to prepare two images, one for dark mode and one for light mode, and then assign them a specific class (<code class="language-plaintext highlighter-rouge">dark</code> or <code class="language-plaintext highlighter-rouge">light</code>):</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">![</span><span class="nv">Light mode only</span><span class="p">](</span><span class="sx">/path/to/light-mode.png</span><span class="p">)</span>{: .light }
<span class="p">![</span><span class="nv">Dark mode only</span><span class="p">](</span><span class="sx">/path/to/dark-mode.png</span><span class="p">)</span>{: .dark }
</code></pre></div></div>

<h3 id="shadow">Shadow</h3>

<p>The screenshots of the program window can be considered to show the shadow effect:</p>

<div class="language-markdown nolineno highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">![</span><span class="nv">Desktop View</span><span class="p">](</span><span class="sx">/assets/img/sample/mockup.png</span><span class="p">)</span>{: .shadow }
</code></pre></div></div>

<h3 id="cdn-url">CDN URL</h3>

<p>If you host the images on the CDN, you can save the time of repeatedly writing the CDN URL by assigning the variable <code class="language-plaintext highlighter-rouge">img_cdn</code> of <code class="language-plaintext filepath highlighter-rouge">_config.yml</code> file:</p>

<div class="language-yaml nolineno highlighter-rouge" file="_config.yml"><div class="highlight"><pre class="highlight"><code><span class="na">img_cdn</span><span class="pi">:</span> <span class="s">https://cdn.com</span>
</code></pre></div></div>

<p>Once <code class="language-plaintext highlighter-rouge">img_cdn</code> is assigned, the CDN URL will be added to the path of all images (images of site avatar and posts) starting with <code class="language-plaintext highlighter-rouge">/</code>.</p>

<p>For instance, when using images:</p>

<div class="language-markdown nolineno highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">![</span><span class="nv">The flower</span><span class="p">](</span><span class="sx">/path/to/flower.png</span><span class="p">)</span>
</code></pre></div></div>

<p>The parsing result will automatically add the CDN prefix <code class="language-plaintext highlighter-rouge">https://cdn.com</code> before the image path:</p>

<div class="language-html nolineno highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">"https://cdn.com/path/to/flower.png"</span> <span class="na">alt=</span><span class="s">"The flower"</span><span class="nt">&gt;</span>
</code></pre></div></div>

<h3 id="image-path">Image Path</h3>

<p>When a post contains many images, it will be a time-consuming task to repeatedly define the path of the images. To solve this, we can define this path in the YAML block of the post:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">img_path</span><span class="pi">:</span> <span class="s">/img/path/</span>
<span class="nn">---</span>
</code></pre></div></div>

<p>And then, the image source of Markdown can write the file name directly:</p>

<div class="language-md nolineno highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">![</span><span class="nv">The flower</span><span class="p">](</span><span class="sx">flower.png</span><span class="p">)</span>
</code></pre></div></div>

<p>The output will be:</p>

<div class="language-html nolineno highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">"/img/path/flower.png"</span> <span class="na">alt=</span><span class="s">"The flower"</span><span class="nt">&gt;</span>
</code></pre></div></div>

<h3 id="preview-image">Preview Image</h3>

<p>If you want to add an image at the top of the article, please provide an image with a resolution of <code class="language-plaintext highlighter-rouge">1200 x 630</code>. Please note that if the image aspect ratio does not meet <code class="language-plaintext highlighter-rouge">1.91 : 1</code>, the image will be scaled and cropped.</p>

<p>Knowing these prerequisites, you can start setting the image’s attribute:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">image</span><span class="pi">:</span>
  <span class="na">path</span><span class="pi">:</span> <span class="s">/path/to/image</span>
  <span class="na">alt</span><span class="pi">:</span> <span class="s">image alternative text</span>
<span class="nn">---</span>
</code></pre></div></div>

<p>Starting from <em>Chirpy v5.0.0</em>, the attributes <code class="language-plaintext highlighter-rouge">height</code> and <code class="language-plaintext highlighter-rouge">width</code> can be abbreviated: <code class="language-plaintext highlighter-rouge">height</code> → <code class="language-plaintext highlighter-rouge">h</code>, <code class="language-plaintext highlighter-rouge">width</code> → <code class="language-plaintext highlighter-rouge">w</code>. In addition, the <a href="#image-path"><code class="language-plaintext highlighter-rouge">img_path</code></a> can also be passed to the preview image, that is, when it has been set, the  attribute <code class="language-plaintext highlighter-rouge">path</code> only needs the image file name.</p>

<p>For simple use, you can also just use <code class="language-plaintext highlighter-rouge">image</code> to define the path.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">image</span><span class="pi">:</span> <span class="s">/path/to/image</span>
<span class="nn">---</span>
</code></pre></div></div>

<h3 id="lqip">LQIP</h3>

<p>For preview images:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">image</span><span class="pi">:</span>
  <span class="na">lqip</span><span class="pi">:</span> <span class="s">/path/to/lqip-file</span> <span class="c1"># or base64 URI</span>
<span class="nn">---</span>
</code></pre></div></div>

<blockquote>
  <p>You can observe LQIP in the preview image of post <a href="/posts/text-and-typography/"><em>Text and Typography</em></a>.</p>
</blockquote>

<p>For normal images:</p>

<div class="language-markdown nolineno highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">![</span><span class="nv">Image description</span><span class="p">](</span><span class="sx">/path/to/image</span><span class="p">)</span>{: lqip="/path/to/lqip-file" }
</code></pre></div></div>

<h2 id="pinned-posts">Pinned Posts</h2>

<p>You can pin one or more posts to the top of the home page, and the fixed posts are sorted in reverse order according to their release date. Enable by:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">pin</span><span class="pi">:</span> <span class="no">true</span>
<span class="nn">---</span>
</code></pre></div></div>

<h2 id="prompts">Prompts</h2>

<p>There are several types of prompts: <code class="language-plaintext highlighter-rouge">tip</code>, <code class="language-plaintext highlighter-rouge">info</code>, <code class="language-plaintext highlighter-rouge">warning</code>, and <code class="language-plaintext highlighter-rouge">danger</code>. They can be generated by adding the class <code class="language-plaintext highlighter-rouge">prompt-{type}</code> to the blockquote. For example, define a prompt of type <code class="language-plaintext highlighter-rouge">info</code> as follows:</p>

<div class="language-md nolineno highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gt">&gt; Example line for prompt.</span>
{: .prompt-info }
</code></pre></div></div>

<h2 id="syntax">Syntax</h2>

<h3 id="inline-code">Inline Code</h3>

<div class="language-md nolineno highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="sb">`inline code part`</span>
</code></pre></div></div>

<h3 id="filepath-hightlight">Filepath Hightlight</h3>

<div class="language-md nolineno highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="sb">`/path/to/a/file.extend`</span>{: .filepath}
</code></pre></div></div>

<h3 id="code-block">Code Block</h3>

<p>Markdown symbols <code class="language-plaintext highlighter-rouge">```</code> can easily create a code block as follows:</p>

<div class="language-md highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">
</span>This is a plaintext code snippet.
<span class="p">```</span>
</code></pre></div></div>

<h4 id="specifying-language">Specifying Language</h4>

<p>Using <code class="language-plaintext highlighter-rouge">```{language}</code> you will get a code block with syntax highlight:</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">yaml
</span><span class="na">key</span><span class="pi">:</span> <span class="s">value</span>
<span class="p">```</span>
</code></pre></div></div>

<blockquote class="prompt-danger">
  <p>The Jekyll tag <code class="language-plaintext highlighter-rouge">{% highlight %}</code> is not compatible with this theme.</p>
</blockquote>

<h4 id="line-number">Line Number</h4>

<p>By default, all languages except <code class="language-plaintext highlighter-rouge">plaintext</code>, <code class="language-plaintext highlighter-rouge">console</code>, and <code class="language-plaintext highlighter-rouge">terminal</code> will display line numbers. When you want to hide the line number of a code block, add the class <code class="language-plaintext highlighter-rouge">nolineno</code> to it:</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">shell
</span><span class="nb">echo</span> <span class="s1">'No more line numbers!'</span>
<span class="p">```</span>
{: .nolineno }
</code></pre></div></div>

<h4 id="specifying-the-filename">Specifying the Filename</h4>

<p>You may have noticed that the code language will be displayed at the top of the code block. If you want to replace it with the file name, you can add the attribute <code class="language-plaintext highlighter-rouge">file</code> to achieve this:</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">shell
</span><span class="c"># content</span>
<span class="p">```</span>
{: file="path/to/file" }
</code></pre></div></div>

<h4 id="liquid-codes">Liquid Codes</h4>

<p>If you want to display the <strong>Liquid</strong> snippet, surround the liquid code with <code class="language-plaintext highlighter-rouge">{% raw %}</code> and <code class="language-plaintext highlighter-rouge">{% endraw %}</code>:</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{% raw %}
<span class="p">```</span><span class="nl">liquid
</span><span class="p">{%</span><span class="w"> </span><span class="kr">if</span><span class="w"> </span><span class="nv">product</span><span class="p">.</span><span class="nv">title</span><span class="w"> </span><span class="ow">contains</span><span class="w"> </span><span class="s1">'Pack'</span><span class="w"> </span><span class="p">%}</span>
  This product's title contains the word Pack.
<span class="p">{%</span><span class="w"> </span><span class="kr">endif</span><span class="w"> </span><span class="p">%}</span>
<span class="p">```</span>
{% endraw %}
</code></pre></div></div>

<p>Or adding <code class="language-plaintext highlighter-rouge">render_with_liquid: false</code> (Requires Jekyll 4.0 or higher) to the post’s YAML block.</p>

<h2 id="videos">Videos</h2>

<p>You can embed a video with the following syntax:</p>

<div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{%</span><span class="w"> </span><span class="nt">include</span><span class="w"> </span><span class="nv">embed</span>/{Platform}.html<span class="w"> </span><span class="na">id</span><span class="o">=</span><span class="s1">'{ID}'</span><span class="w"> </span><span class="p">%}</span>
</code></pre></div></div>
<p>Where <code class="language-plaintext highlighter-rouge">Platform</code> is the lowercase of the platform name, and <code class="language-plaintext highlighter-rouge">ID</code> is the video ID.</p>

<p>The following table shows how to get the two parameters we need in a given video URL, and you can also know the currently supported video platforms.</p>

<table>
  <thead>
    <tr>
      <th>Video URL</th>
      <th>Platform</th>
      <th style="text-align: left">ID</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><a href="https://www.youtube.com/watch?v=H-B46URT4mg">https://www.<strong>youtube</strong>.com/watch?v=<strong>H-B46URT4mg</strong></a></td>
      <td><code class="language-plaintext highlighter-rouge">youtube</code></td>
      <td style="text-align: left"><code class="language-plaintext highlighter-rouge">H-B46URT4mg</code></td>
    </tr>
    <tr>
      <td><a href="https://www.twitch.tv/videos/1634779211">https://www.<strong>twitch</strong>.tv/videos/<strong>1634779211</strong></a></td>
      <td><code class="language-plaintext highlighter-rouge">twitch</code></td>
      <td style="text-align: left"><code class="language-plaintext highlighter-rouge">1634779211</code></td>
    </tr>
  </tbody>
</table>

<h2 id="learn-more">Learn More</h2>

<p>For more knowledge about Jekyll posts, visit the <a href="https://jekyllrb.com/docs/posts/">Jekyll Docs: Posts</a>.</p>]]></content><author><name>Cotes Chung</name></author><category term="Blogging" /><category term="Tutorial" /><category term="writing" /><summary type="html"><![CDATA[This tutorial will guide you how to write a post in the Chirpy template, and it’s worth reading even if you’ve used Jekyll before, as many features require specific variables to be set.]]></summary></entry><entry><title type="html">Text and Typography</title><link href="http://localhost:4000/blogging/demo/2019/08/08/text-and-typography.html" rel="alternate" type="text/html" title="Text and Typography" /><published>2019-08-08T12:33:00+09:00</published><updated>2019-08-08T12:33:00+09:00</updated><id>http://localhost:4000/blogging/demo/2019/08/08/text-and-typography</id><content type="html" xml:base="http://localhost:4000/blogging/demo/2019/08/08/text-and-typography.html"><![CDATA[<p>This post is to show Markdown syntax rendering on <a href="https://github.com/cotes2020/jekyll-theme-chirpy/fork"><strong>Chirpy</strong></a>, you can also use it as an example of writing. Now, let’s start looking at text and typography.</p>

<h2 id="titles">Titles</h2>
<hr />
<h1 id="h1---heading">H1 - heading</h1>

<h2 data-toc-skip="">H2 - heading</h2>

<h3 data-toc-skip="">H3 - heading</h3>

<h4>H4 - heading</h4>
<hr />

<h2 id="paragraph">Paragraph</h2>

<p>Quisque egestas convallis ipsum, ut sollicitudin risus tincidunt a. Maecenas interdum malesuada egestas. Duis consectetur porta risus, sit amet vulputate urna facilisis ac. Phasellus semper dui non purus ultrices sodales. Aliquam ante lorem, ornare a feugiat ac, finibus nec mauris. Vivamus ut tristique nisi. Sed vel leo vulputate, efficitur risus non, posuere mi. Nullam tincidunt bibendum rutrum. Proin commodo ornare sapien. Vivamus interdum diam sed sapien blandit, sit amet aliquam risus mattis. Nullam arcu turpis, mollis quis laoreet at, placerat id nibh. Suspendisse venenatis eros eros.</p>

<h2 id="lists">Lists</h2>

<h3 id="ordered-list">Ordered list</h3>

<ol>
  <li>Firstly</li>
  <li>Secondly</li>
  <li>Thirdly</li>
</ol>

<h3 id="unordered-list">Unordered list</h3>

<ul>
  <li>Chapter
    <ul>
      <li>Section
        <ul>
          <li>Paragraph</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h3 id="todo-list">ToDo list</h3>

<ul class="task-list">
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />Job
    <ul class="task-list">
      <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" checked="checked" />Step 1</li>
      <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" checked="checked" />Step 2</li>
      <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />Step 3</li>
    </ul>
  </li>
</ul>

<h3 id="description-list">Description list</h3>

<dl>
  <dt>Sun</dt>
  <dd>the star around which the earth orbits</dd>
  <dt>Moon</dt>
  <dd>the natural satellite of the earth, visible by reflected light from the sun</dd>
</dl>

<h2 id="block-quote">Block Quote</h2>

<blockquote>
  <p>This line shows the <em>block quote</em>.</p>
</blockquote>

<h2 id="prompts">Prompts</h2>

<blockquote class="prompt-tip">
  <p>An example showing the <code class="language-plaintext highlighter-rouge">tip</code> type prompt.</p>
</blockquote>

<blockquote class="prompt-info">
  <p>An example showing the <code class="language-plaintext highlighter-rouge">info</code> type prompt.</p>
</blockquote>

<blockquote class="prompt-warning">
  <p>An example showing the <code class="language-plaintext highlighter-rouge">warning</code> type prompt.</p>
</blockquote>

<blockquote class="prompt-danger">
  <p>An example showing the <code class="language-plaintext highlighter-rouge">danger</code> type prompt.</p>
</blockquote>

<h2 id="tables">Tables</h2>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Company</th>
      <th style="text-align: left">Contact</th>
      <th style="text-align: right">Country</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">Alfreds Futterkiste</td>
      <td style="text-align: left">Maria Anders</td>
      <td style="text-align: right">Germany</td>
    </tr>
    <tr>
      <td style="text-align: left">Island Trading</td>
      <td style="text-align: left">Helen Bennett</td>
      <td style="text-align: right">UK</td>
    </tr>
    <tr>
      <td style="text-align: left">Magazzini Alimentari Riuniti</td>
      <td style="text-align: left">Giovanni Rovelli</td>
      <td style="text-align: right">Italy</td>
    </tr>
  </tbody>
</table>

<h2 id="links">Links</h2>

<p><a href="http://127.0.0.1:4000">http://127.0.0.1:4000</a></p>

<h2 id="footnote">Footnote</h2>

<p>Click the hook will locate the footnote<sup id="fnref:footnote" role="doc-noteref"><a href="#fn:footnote" class="footnote" rel="footnote">1</a></sup>, and here is another footnote<sup id="fnref:fn-nth-2" role="doc-noteref"><a href="#fn:fn-nth-2" class="footnote" rel="footnote">2</a></sup>.</p>

<h2 id="inline-code">Inline code</h2>

<p>This is an example of <code class="language-plaintext highlighter-rouge">Inline Code</code>.</p>

<h2 id="filepath">Filepath</h2>

<p>Here is the <code class="language-plaintext filepath highlighter-rouge">/path/to/the/file.extend</code>.</p>

<h2 id="code-blocks">Code blocks</h2>

<h3 id="common">Common</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>This is a common code snippet, without syntax highlight and line number.
</code></pre></div></div>

<h3 id="specific-language">Specific Language</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="o">[</span> <span class="nv">$?</span> <span class="nt">-ne</span> 0 <span class="o">]</span><span class="p">;</span> <span class="k">then
  </span><span class="nb">echo</span> <span class="s2">"The command was not successful."</span><span class="p">;</span>
  <span class="c">#do the needful / exit</span>
<span class="k">fi</span><span class="p">;</span>
</code></pre></div></div>

<h3 id="specific-filename">Specific filename</h3>

<div file="_sass/jekyll-theme-chirpy.scss" class="language-sass highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">@import</span>
  <span class="s2">"colors/light-typography"</span><span class="o">,</span>
  <span class="s2">"colors/dark-typography"</span>
</code></pre></div></div>

<h2 id="mathematics">Mathematics</h2>

<p>The mathematics powered by <a href="https://www.mathjax.org/"><strong>MathJax</strong></a>:</p>

\[\sum_{n=1}^\infty 1/n^2 = \frac{\pi^2}{6}\]

<p>When $a \ne 0$, there are two solutions to $ax^2 + bx + c = 0$ and they are</p>

\[x = {-b \pm \sqrt{b^2-4ac} \over 2a}\]

<h2 id="mermaid-svg">Mermaid SVG</h2>

<pre><code class="language-mermaid"> gantt
  title  Adding GANTT diagram functionality to mermaid
  apple :a, 2017-07-20, 1w
  banana :crit, b, 2017-07-23, 1d
  cherry :active, c, after b a, 1d
</code></pre>

<h2 id="images">Images</h2>

<h3 id="default-with-caption">Default (with caption)</h3>

<p><img src="/posts/20190808/mockup.png" alt="Desktop View" width="972" height="589" />
<em>Full screen width and center alignment</em></p>

<h3 id="left-aligned">Left aligned</h3>

<p><img src="/posts/20190808/mockup.png" alt="Desktop View" width="972" height="589" class="w-75 normal" /></p>

<h3 id="float-to-left">Float to left</h3>

<p><img src="/posts/20190808/mockup.png" alt="Desktop View" width="972" height="589" class="w-50 left" />
Praesent maximus aliquam sapien. Sed vel neque in dolor pulvinar auctor. Maecenas pharetra, sem sit amet interdum posuere, tellus lacus eleifend magna, ac lobortis felis ipsum id sapien. Proin ornare rutrum metus, ac convallis diam volutpat sit amet. Phasellus volutpat, elit sit amet tincidunt mollis, felis mi scelerisque mauris, ut facilisis leo magna accumsan sapien. In rutrum vehicula nisl eget tempor. Nullam maximus ullamcorper libero non maximus. Integer ultricies velit id convallis varius. Praesent eu nisl eu urna finibus ultrices id nec ex. Mauris ac mattis quam. Fusce aliquam est nec sapien bibendum, vitae malesuada ligula condimentum.</p>

<h3 id="float-to-right">Float to right</h3>

<p><img src="/posts/20190808/mockup.png" alt="Desktop View" width="972" height="589" class="w-50 right" />
Praesent maximus aliquam sapien. Sed vel neque in dolor pulvinar auctor. Maecenas pharetra, sem sit amet interdum posuere, tellus lacus eleifend magna, ac lobortis felis ipsum id sapien. Proin ornare rutrum metus, ac convallis diam volutpat sit amet. Phasellus volutpat, elit sit amet tincidunt mollis, felis mi scelerisque mauris, ut facilisis leo magna accumsan sapien. In rutrum vehicula nisl eget tempor. Nullam maximus ullamcorper libero non maximus. Integer ultricies velit id convallis varius. Praesent eu nisl eu urna finibus ultrices id nec ex. Mauris ac mattis quam. Fusce aliquam est nec sapien bibendum, vitae malesuada ligula condimentum.</p>

<h3 id="darklight-mode--shadow">Dark/Light mode &amp; Shadow</h3>

<p>The image below will toggle dark/light mode based on theme preference, notice it has shadows.</p>

<p><img src="/posts/20190808/devtools-light.png" alt="light mode only" class="light w-75 shadow rounded-10" w="1212" h="668" />
<img src="/posts/20190808/devtools-dark.png" alt="dark mode only" class="dark w-75 shadow rounded-10" w="1212" h="668" /></p>

<h2 id="video">Video</h2>

<iframe class="embed-video youtube lazyload" src="https://www.youtube.com/embed/Balreaj8Yqs" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>

<h2 id="reverse-footnote">Reverse Footnote</h2>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:footnote" role="doc-endnote">
      <p>The footnote source <a href="#fnref:footnote" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:fn-nth-2" role="doc-endnote">
      <p>The 2nd footnote source <a href="#fnref:fn-nth-2" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>Cotes Chung</name></author><category term="Blogging" /><category term="Demo" /><category term="typography" /><summary type="html"><![CDATA[This post is to show Markdown syntax rendering on Chirpy, you can also use it as an example of writing. Now, let’s start looking at text and typography.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/commons/devices-mockup.png" /><media:content medium="image" url="http://localhost:4000/commons/devices-mockup.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>